how to add comments on css?
answer = using /* and */. Example : /* This is a comment in css */


Why do we use pseudo-class?
answer =  pseudo-classes are used to add styles only when selectors meet certain conditions. A pseudo class is expressed by adding a colon (:) after a selector in CSS, followed by a pseudo-class such as "hover", "focus", or "active", like this: a:hover { /* your style here */ }


How is specificity applied?
answer = Specificity is a weight that is applied to a given CSS declaration. 
The following list of selector types increases by specificity:
1) type selectors
2) class selectors
3) id selectors
4) inline selectors
5) !important


What method allows an element to be moved from its current position?
Relative positioning changes the position of the HTML element relative to where it normally appears. So "left:20" adds 20 pixels to the element's LEFT position.


what properties does flex model have?
1) flex-grow	A number specifying how much the item will grow relative to the rest of the flexible items	
2) flex-shrink	A number specifying how much the item will shrink relative to the rest of the flexible items	
3) flex-basis	The length of the item. Legal values: "auto", "inherit", or a number followed by "%", "px", "em" or any other length unit	
4) auto	Same as 1 1 auto.	
5) initial	Same as 0 1 auto.
6) none	Same as 0 0 auto.	
7) inherit	Inherits this property from its parent element. 


What is the difference between flex and grids?
flexbox was designed for layout in one dimension - either a row or a column. Grid was designed for two-dimensional layout - rows, and columns at the same time.


Give an example where we have to use grids and where you have to use flexbox?
Grid = ideal for larger layouts that need to be divided into sections. In other words, this type of layout will have elements that need to overlap and layer, rather than be linear
Flex = align elements in a container even if you don’t know the size of those elements or if the size might change. That’s because a flex container is flexible: it expands the flex elements to fill space when it’s available and shrinks them to prevent overflow when it’s not.


Give an example where you cannot use flexbox, and you can only use grids?
Overlap elements

What are combinators? give examples of how you can use them
There are four different combinators in CSS:
1) descendant selector (space)
2) child selector (>)
3) adjacent sibling selector (+) = div + p {
  background-color: yellow;
} // selects first p that comes immediately after div
4) general sibling selector (~)


What does object-fit do?
specify how an <img> or <video> should be resized to fit its container. Ex : fill, contain, cover, none

What does rotate do?
 rotates an element around a fixed point on the 2D plane by taking degree as argument. Example rotate(20deg)

What rule can be used to define animations
@keyframes rule is used to define the properties that will be animated in an animation rule. div { width: 10px; height: 10px; background-color: red; animation-name: example; animation-duration: 40s; }
@keyframes example { from {background-color: red;} to {background-color: yellow;} }



When working with attribute selectors, how can you select elements which contain a particular attribute value?
The [attribute*="value"] selector is used to select elements whose attribute value contains a specified value.

What does @media do?
The @media rule is used in media queries to apply different styles for different media types/devices. Media types = all, print, screen, speech



What can be used to override properties of an element
!important

How can you select every alternate elements in a list of elements using css?
By using :nth-child(odd) 

What is the ranking of selectors with respect to specificity
!important, inline, id, class, elements and *

how can we apply same styles to multiple selectors?
We can define the same styles just once and link it to various multiple selectors by using comma to separate

What are the differences between relative and absolute in CSS?
position: relative places an element relative to its current position without changing the layout around it, whereas position: absolute places an element relative to its parent's position and changing the layout around it.